services:
  validator:
    build:
      context: ./validator
      dockerfile: Dockerfile
    command: bash validator/.docker/start.sh
    restart: "no"
    container_name: "validator"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    ports:
      - "8081:8081"
    volumes:
      - ./:/app
    networks:
      - zip-temperature
  zip-temperature:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: bash .docker/start.sh
    restart: "no"
    container_name: "zip-temperature"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - "8080:8080"
    volumes:
      - ./:/app
    depends_on:
      - validator
    networks:
      - zip-temperature
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    restart: unless-stopped
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
    networks:
      - zip-temperature
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    environment:
      - JAVA_OPTS=-Xms1024m -Xmx1024m -XX:+ExitOnOutOfMemoryError
    restart: unless-stopped
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - "9411:9411"
    networks:
      - zip-temperature
  otel-collector:
    image: otel/opentelemetry-collector:latest
    restart: unless-stopped
    command: [ "--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}" ]
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one
    networks:
      - zip-temperature
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - zip-temperature
networks:
  zip-temperature:
    driver: bridge